import { DocStatus, DocumentType, Localization, PlatformType, TickerAtm, TickerAtmType, TickerAtmUsage } from '@diia-inhouse/types'

import { DocumentCover, DocumentTicker, DocumentTickerCode, DocumentTickerPlaceholder } from '@interfaces/services/documentAttributes'
import { DocumentAttributesService } from '@interfaces/services/documents'

export default class DriverLicenseAttributesService implements DocumentAttributesService {
    readonly covers: Partial<Record<DocumentType, Partial<Record<DocStatus, DocumentCover>>>> = {
        [DocumentType.DriverLicense]: {
            [DocStatus.NoPhoto]: {
                title: '–í—ñ–¥—Å—É—Ç–Ω—î —Ñ–æ—Ç–æ –≤ —Ä–µ—î—Å—Ç—Ä—ñ üòî',
                text: '–ó–∞–ø–∏—à—ñ—Ç—å—Å—è –≤ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É —á–µ—Ä–≥—É, —â–æ–± –¥–æ–¥–∞—Ç–∏ –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ñ–æ—Ç–æ.',
                actionButton: {
                    name: '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è',
                    action: 'inLine',
                },
            },
            [DocStatus.AdditionalVerification]: {
                title: '–î–æ–∫—É–º–µ–Ω—Ç –ø–æ—Ç—Ä–µ–±—É—î –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó üòî',
                text: '–ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ –∫–∞–±—ñ–Ω–µ—Ç—É –≤–æ–¥—ñ—è —Ç–∞ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –æ–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º—É.',
                actionButton: {
                    name: '–î–æ –∫–∞–±—ñ–Ω–µ—Ç—É –≤–æ–¥—ñ—è',
                    action: 'toDriverAccount',
                },
            },
            [DocStatus.OldModel]: {
                title: '–î–æ–∫—É–º–µ–Ω—Ç —Å—Ç–∞—Ä–æ–≥–æ –∑—Ä–∞–∑–∫–∞ üòî',
                text: '–ó–∞–ø–∏—à—ñ—Ç—å—Å—è –≤ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É —á–µ—Ä–≥—É, —â–æ–± –π–æ–≥–æ –æ–Ω–æ–≤–∏—Ç–∏ —Ç–∞ –¥–æ–¥–∞—Ç–∏ –¥–æ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É.',
                actionButton: {
                    name: '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è',
                    action: 'inLine',
                },
            },
            [DocStatus.Inactive]: {
                title: '–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è üòî',
                text: '–í–∏ –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤–µ –≤–æ–¥—ñ–π—Å—å–∫–µ –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è —ñ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –¥–æ–∫—É–º–µ–Ω—Ç.',
                actionButton: {
                    name: '–í–∏–¥–∞–ª–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç',
                    action: 'deleteDocument',
                },
            },
        },
    }

    readonly documentTypesForPrefixedTrident: Partial<Record<PlatformType, DocumentType[]>> = {
        [PlatformType.Android]: [DocumentType.DriverLicense],
        [PlatformType.Huawei]: [DocumentType.DriverLicense],
    }

    readonly tickers: Partial<Record<DocumentType, Partial<Record<DocumentTickerCode, Partial<Record<Localization, TickerAtm>>>>>> = {
        [DocumentType.DriverLicense]: {
            [DocumentTickerCode.ValidUntil]: {
                [Localization.UA]: {
                    usage: TickerAtmUsage.document,
                    type: TickerAtmType.positive,
                    value: `–î—ñ–π—Å–Ω–µ –¥–æ {${DocumentTickerPlaceholder.ValidUntil}} ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –æ {${DocumentTickerPlaceholder.UpdatedAt}} ‚Ä¢ `,
                },
                [Localization.ENG]: {
                    usage: TickerAtmUsage.document,
                    type: TickerAtmType.positive,
                    value: `Valid until {${DocumentTickerPlaceholder.ValidUntil}} ‚Ä¢ Document updated on {${DocumentTickerPlaceholder.UpdatedAt}} ‚Ä¢ `,
                },
            },
        },
    }

    /** @deprecated */
    readonly tickersV1: Record<Localization, Partial<Record<DocumentType, Partial<Record<DocumentTickerCode, DocumentTicker>>>>> = {
        [Localization.UA]: {
            [DocumentType.DriverLicense]: {
                [DocumentTickerCode.ValidUntil]: {
                    type: 'info',
                    text: `–î—ñ–π—Å–Ω–µ –¥–æ {${DocumentTickerPlaceholder.ValidUntil}} ‚Ä¢ –£–ö–†–ê–á–ù–ê ‚Ä¢ –î—ñ–π—Å–Ω–µ –¥–æ {${DocumentTickerPlaceholder.ValidUntil}} ‚Ä¢ –£–ö–†–ê–á–ù–ê ‚Ä¢ `,
                },
            },
        },
        [Localization.ENG]: {
            [DocumentType.DriverLicense]: {
                [DocumentTickerCode.ValidUntil]: {
                    type: 'info',
                    text: `Valid until {${DocumentTickerPlaceholder.ValidUntil}} ‚Ä¢ UKRAINE ‚Ä¢ Valid until {${DocumentTickerPlaceholder.ValidUntil}} ‚Ä¢ UKRAINE ‚Ä¢ `,
                },
            },
        },
    }
}
